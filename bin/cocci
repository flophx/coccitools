#!/usr/bin/env python

# This file is part of Coccitools.

# Copyright (C) 2010  Florian MANY

# Coccitools is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Coccitools is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public License
# along with Coccitools.  If not, see <http://www.gnu.org/licenses/>.

import sys, os

homepath =  os.path.abspath(__file__).split('bin')[0]
libpath =  homepath + "lib/python"
sys.path.append(libpath)
import coccitools, configuration
import ConfigParser

##============================
# Start Program
# ============================
def main():

    #
    config = ConfigParser.ConfigParser()
    config.read(homepath + 'coccitools.conf')

    #
    if len(sys.argv) == 1:
        print "No coccitools-command selected"
        sys.exit(2)
    else:
        try:
            command = getattr(coccitools, sys.argv[1] )
            if callable(command):
                command(sys.argv[2:], openConfig() )
        except AttributeError, err:
            print err
            print "%s is not a coccitools-command" %  sys.argv[1]
            sys.exit(2)

# ============================
# Open Config File
# ============================
def openConfig():
    config = ConfigParser.ConfigParser()
    config.read(homepath + 'coccitools.conf')
    return config

# ============================
# check if config file exists
# ============================
def checkConfigFile(path):
    #
    if not os.path.isfile(path + "coccitools.conf"):
        print "No coccitools config file. Create one."
        configuration.initConfig(path)

# ============================
# Start Program
# ============================
if __name__ == "__main__":
    checkConfigFile(homepath)
    main()
